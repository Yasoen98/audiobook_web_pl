version: '3.9'
services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    environment:
      NEXT_PUBLIC_API_URL: http://backend:4000
    ports:
      - '3000:3000'
    depends_on:
      - backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    env_file: .env.example
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/polski_lektor_ai
      REDIS_URL: redis://redis:6379
      TTS_SERVICE_URL: http://tts-svc:8000
    ports:
      - '4000:4000'
    depends_on:
      - postgres
      - redis
      - tts-svc
  tts-svc:
    build:
      context: .
      dockerfile: Dockerfile.tts
    environment:
      TTS_MODELS_DIR: /models
    ports:
      - '8000:8000'
    volumes:
      - tts-models:/models
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: polski_lektor_ai
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
  redis:
    image: redis:7
    ports:
      - '6379:6379'
  minio:
    image: minio/minio
    command: server /data --console-address :9001
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio-data:/data
  clamav:
    image: clamav/clamav:latest
    ports:
      - '3310:3310'
volumes:
  pgdata:
  minio-data:
  tts-models:
